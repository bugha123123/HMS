@using HMS.Interface

@inject IAuthService _authservice;
@inject IDoctorService _doctorservice;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - HMS</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/HMS.styles.css" asp-append-version="true" />
 
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

</head>
<body>

    <style>
        .notifications-panel {
        transform: translateX(-100%);
        transition: transform 0.3s ease-in-out;
        }

        .notifications-panel.show {
        transform: translateX(0);
        }

        .overlay {
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease-in-out;
        }

        .overlay.show {
        opacity: 1;
        visibility: visible;
        }


    </style>

    @if (User.IsInRole("Admin"))
    {
        
    var loggedInUser = await _authservice.GetLoggedInUserAsync();


        <nav class="bg-white shadow-md">
            <div class="container mx-auto px-4">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <h1 class="text-2xl font-bold text-[#0284c7]">HMS</h1>
                    </div>
                    <div class="hidden md:flex space-x-4">
                        <a asp-action="dashboard" asp-controller="Admin" class="px-4 py-2 text-gray-700 hover:text-[#0284c7] transition-colors">Dashboard</a>
                        <a asp-action="patients" asp-controller="Admin" class="px-4 py-2 text-gray-700 hover:text-[#0284c7] transition-colors">Patients</a>
                        <a asp-action="appointments" asp-controller="Admin" class="px-4 py-2 text-gray-700 hover:text-[#0284c7] transition-colors">Appointments</a>
                        <a asp-action="doctors" asp-controller="Admin" class="px-4 py-2 text-gray-700 hover:text-[#0284c7] transition-colors">Doctors</a>

                        <a asp-action="requests" asp-controller="Admin" class="px-4 py-2 text-gray-700 hover:text-[#0284c7] transition-colors">Requests</a>
                    </div>

                    <div>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <form asp-controller="Auth" asp-action="SignoutUser" method="post" style="display:inline;">
                                <button type="submit" class="bg-[#0284c7] text-white px-4 py-2 rounded-lg hover:bg-[#0ea5e9] transition-colors">
                                    Log out
                                </button>
                            </form>
                        }
                        else
                        {
                            <a asp-action="signin" asp-controller="Auth">
                                <button class="bg-[#0284c7] text-white px-4 py-2 rounded-lg hover:bg-[#0ea5e9] transition-colors">
                                    Sign in
                                </button>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </nav>
    }
    else if (User.IsInRole("Patient"))
    {
        <header class="bg-gradient-to-r from-blue-600 to-blue-700 text-white shadow-lg">
            <nav class="container mx-auto px-4 py-4">
                <div class="flex flex-col md:flex-row justify-between items-center gap-4">
                    <a class="text-2xl font-bold tracking-tight hover:text-blue-100 transition-colors flex items-center gap-2" asp-action="Index" asp-controller="Home">
                        <i data-lucide="heart-pulse" class="w-8 h-8"></i>
                        <span>HMS Patient Portal</span>
                    </a>

                    <ul class="flex flex-wrap items-center gap-2 md:gap-6">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li>
                                <a asp-action="bookappointment" asp-controller="Home"
                                class="inline-flex items-center gap-2 px-3 py-2 rounded-lg hover:bg-blue-500 transition-colors">
                                    <i data-lucide="calendar-plus" class="w-4 h-4"></i>
                                    <span>Book Appointment</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a asp-action="signin" asp-controller="Auth"
                                class="inline-flex items-center gap-2 px-3 py-2 rounded-lg hover:bg-blue-500 transition-colors">
                                    <i data-lucide="log-in" class="w-4 h-4"></i>
                                    <span>Sign In</span>
                                </a>
                            </li>
                        }
                        <li>
                            <a asp-action="medicalrecords" asp-controller="Home"
                            class="inline-flex items-center gap-2 px-3 py-2 rounded-lg hover:bg-blue-500 transition-colors">
                                <i data-lucide="clipboard-list" class="w-4 h-4"></i>
                                <span>Medical Records</span>
                            </a>
                        </li>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li>
                                <a asp-action="SignOutUser" asp-controller="Auth"
                                class="inline-flex items-center gap-2 px-3 py-2 rounded-lg hover:bg-blue-500 transition-colors">
                                    <i data-lucide="log-out" class="w-4 h-4"></i>
                                    <span>Log out</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a asp-action="signin" asp-controller="Auth"
                                class="inline-flex items-center gap-2 px-4 py-2 bg-blue-500 rounded-lg hover:bg-blue-400 transition-colors">
                                    <i data-lucide="log-in" class="w-4 h-4"></i>
                                    <span>Sign in</span>
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </nav>
        </header>
    }
    else if (User.IsInRole("Doctor"))
    {
        var docNotifications = await _doctorservice.GetAllDoctorNotifications();


        var unreadNotifications = docNotifications.Where(n => !n.IsRead).ToList();

      
    var loggedInUser = await _authservice.GetLoggedInUserAsync();




<header class="bg-white shadow-sm">
    <div class="max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex justify-between items-center">
        <a asp-action="Index" asp-controller="Doctor" style="text-decoration:none;">
            <div class="flex items-center space-x-4">
                <i data-lucide="user" class="h-8 w-8 text-blue-600"></i>
                <div>
                    <h1 class="text-2xl font-bold text-gray-900">Dr. @User.Identity.Name.Substring(0, 7)</h1>
                    <p class="text-sm text-gray-500">@loggedInUser.Doctor.Specialization</p>
                </div>
            </div>
        </a>
        
        <div class="flex items-center space-x-4">
            <!-- Notification Bell Icon with Badge -->
            <div class="relative">
                <button class="p-2 rounded-full hover:bg-gray-100 relative" onclick="toggleNotificationPanel()">
                    <i data-lucide="bell" class="h-6 w-6 text-gray-600"></i>

                    @if (unreadNotifications.Count > 0)
                    {
                        <span class="absolute top-0 right-0 transform translate-x-1/2 -translate-y-1/2 bg-red-600 text-white text-xs font-bold px-2 py-0.5 rounded-full">
                            @unreadNotifications.Count
                        </span>
                    }
                </button>
            </div>

            <!-- Logout Button -->
            <button class="flex items-center space-x-2 px-4 py-2 rounded-lg bg-red-50 text-red-600 hover:bg-red-100">
                <i data-lucide="log-out" class="h-5 w-5"></i>
                <span><a asp-action="SignOutUser" asp-controller="Auth">Logout</a></span>
            </button>
        </div>
    </div>
</header>

        <div id="overlay" class="overlay fixed inset-0 bg-black bg-opacity-25 z-40"></div>

    

<!-- Notifications Panel -->
<div id="notificationsPanel" class="notifications-panel fixed left-0 top-0 h-full w-96 bg-white shadow-lg z-50">
    <!-- Header -->
    <div class="bg-white border-b px-4 py-4">
        <div class="flex items-center justify-between">
            <h1 class="text-xl font-bold text-gray-900">Notifications</h1>
            <div class="flex items-center space-x-4">
                <span class="bg-blue-600 text-white px-3 py-1 rounded-full text-sm">@unreadNotifications.Count() new</span>
                <button id="closePanel" class="text-gray-500 hover:text-gray-700" onclick="CloseNotificationTab()">
                    <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="px-4 py-3 border-b">
        <div class="flex space-x-2">
            <button class="bg-blue-600 text-white px-3 py-1 rounded-lg text-sm filter-btn active" data-filter="all">All</button>
            <button class="bg-white text-gray-700 px-3 py-1 rounded-lg text-sm hover:bg-gray-50 filter-btn" data-filter="unread">Unread</button>
        </div>
    </div>

    <!-- Notifications List -->
            <div class="overflow-y-auto h-[calc(100%-8rem)]">
                <div class="p-4 space-y-4" id="notifications-container">
                    @if (docNotifications.Any())
                    {
                        @foreach (var notification in docNotifications)
                        {
                            <div class="p-4 rounded-lg border-l-4 notification-item
                    @(notification.IsRead ? "bg-blue-50 border-blue-500" : "bg-green-50 border-green-500")"
                                 data-read="@(notification.IsRead ? "read" : "unread")">
                                <div class="flex items-start">
                                    <div class="flex-shrink-0">
                                        <svg class="h-5 w-5 @(notification.IsRead ? "text-blue-500" : "text-green-500")" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                        </svg>
                                    </div>
                                    <div class="ml-3">
                                        <div class="flex items-center justify-between">
                                            <p class="text-sm font-medium text-red-800">@notification.Type</p>
                                            <span class="text-xs text-red-700">@notification.CreatedAt</span>
                                        </div>
                                        <p class="mt-1 text-sm text-red-700">Patient @notification.patient.UserName, @notification.Message</p>
                                        <div class="mt-3 flex space-x-3">
                                            <a asp-action="Dreviewnotification" asp-controller="Doctor" asp-route-NotificationId="@notification.Id" style="text-decoration:none;">
                                                <button class="bg-red-500 text-white px-3 py-1 rounded text-sm hover:bg-red-600">Review Now</button>
                                            </a>
                                            <form asp-action="DismissNotification" asp-controller="Doctor" method="post">
                                                <input hidden value="@notification.Id" name="AppointmentId" />
                                                <button type="submit" class="text-red-700 hover:text-red-800 text-sm">Dismiss</button>
                                           </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center text-gray-500 mt-4">
                            No notifications available.
                        </div>
                    }
                </div>
            </div>


</div>


          

@* 
             

                @* <!-- Appointment Reminder -->
                <div class="bg-white p-4 rounded-lg shadow-sm hover:bg-gray-50">
                    <div class="flex items-start">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                            </svg>
                        </div>
                        <div class="ml-3">
                            <div class="flex items-center justify-between">
                                <p class="text-sm font-medium text-gray-900">Upcoming Appointment</p>
                                <span class="text-xs text-gray-500">2 hours ago</span>
                            </div>
                            <p class="mt-1 text-sm text-gray-600">Follow-up with Michael Johnson tomorrow at 10:00 AM.</p>
                            <button class="mt-3 text-green-600 hover:text-green-700 text-sm">View Details</button>
                        </div>
                    </div>
                </div> *@
    
    }

    
  
    <div class="container mx-auto">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

<script>
      function toggleNotificationPanel() {
        const notificationsPanel = document.getElementById('notificationsPanel');
        const overlay = document.getElementById('overlay');
        notificationsPanel.classList.toggle('show');
        overlay.classList.toggle('show');
    }

    function CloseNotificationTab() {
        const notificationsPanel = document.getElementById('notificationsPanel');
        const overlay = document.getElementById('overlay');
        notificationsPanel.classList.remove('show');  // Remove the 'show' class to hide the panel
        overlay.classList.remove('show');  // Remove the 'show' class to hide the overlay
    }
        document.addEventListener("DOMContentLoaded", function () {
        const filterButtons = document.querySelectorAll(".filter-btn");
        const notifications = document.querySelectorAll(".notification-item");

        filterButtons.forEach(button => {
            button.addEventListener("click", function () {
                // Remove active class from all buttons
                filterButtons.forEach(btn => btn.classList.remove("bg-blue-600", "text-white"));
                filterButtons.forEach(btn => btn.classList.add("bg-white", "text-gray-700"));

                // Add active class to the clicked button
                this.classList.add("bg-blue-600", "text-white");

                const filter = this.getAttribute("data-filter");

                notifications.forEach(notification => {
                    if (filter === "all") {
                        notification.style.display = "block";
                    } else if (filter === "unread") {
                        notification.getAttribute("data-read") === "unread"
                            ? (notification.style.display = "block")
                            : (notification.style.display = "none");
                    }
                });
            });
        });
    });

           
</script>
